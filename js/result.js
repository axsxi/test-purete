document.addEventListener("DOMContentLoaded", () => {
    const themeSizes = [10, 10, 10, 10, 5, 5]; // Nombre de questions par th√®me (50 au total)
    const themeNames = [
        "Innocence g√©n√©rale",
        "Exp√©riences sociales",
        "Amour & Romance",
        "Exp√©riences sexuelles",
        "Drogues & Alcool",
        "L√©galit√© & Ill√©galit√©"
    ];

    const storedAnswers = localStorage.getItem("answers");

    if (!storedAnswers) {
        document.getElementById("result-container").innerHTML = "<p>Erreur : aucun score trouv√©. Assurez-vous d'avoir termin√© le test.</p>";
        return;
    }

    const answers = JSON.parse(storedAnswers);

    // V√©rifier si on a bien 50 r√©ponses
    if (answers.length !== 50) {
        document.getElementById("result-container").innerHTML = `<p>Erreur : nombre de r√©ponses incorrect (${answers.length}/50). Veuillez recommencer le test.</p>`;
        return;
    }

    let scores = [];
    let startIndex = 0;

    themeSizes.forEach((size, index) => {
        let yesCount = answers.slice(startIndex, startIndex + size).filter(answer => answer === "yes").length;
        let score = Math.round(((size - yesCount) / size) * 100);
        scores.push(score);
        startIndex += size;
    });

    const resultContainer = document.getElementById("result-container");
    resultContainer.innerHTML = "<h2>R√©sultats par cat√©gorie :</h2>";

    scores.forEach((score, index) => {
        resultContainer.innerHTML += `
            <div class="result-item">
                <h3>${themeNames[index]}</h3>
                <p>Score : <strong>${score}%</strong></p>
                <div class="progress-bar">
                    <div class="progress" style="width: ${score}%;"></div>
                </div>
            </div>
        `;
    });

    let globalScore = Math.round(scores.reduce((a, b) => a + b, 0) / scores.length);
    resultContainer.innerHTML += `
        <h2>Score de puret√© global : <strong>${globalScore}%</strong></h2>
        <p>${getScoreMessage(globalScore)}</p>
    `;
});

// Fonction qui affiche un message en fonction du score global
function getScoreMessage(score) {
    if (score === 100) return "Tu es un ange pur ! üòá";
    if (score >= 80) return "Plut√¥t sage, mais pas totalement innocent(e) ! üòâ";
    if (score >= 50) return "Un(e) aventurier(e) mod√©r√©(e)... üòè";
    if (score >= 30) return "Tu as bien v√©cu, et √ßa se voit ! üòà";
    return "Une L√âGENDE de la d√©bauche. üî•";
}

document.addEventListener("DOMContentLoaded", () => { 
    const drinkCount = localStorage.getItem("drinkCount") || 0;
    
    let verres = Math.floor(drinkCount / 10); // 1 verre tous les 10 "Oui"
    let shots = Math.floor(drinkCount / 25); // 1 shot tous les 25 "Oui"
    let gorg√©esRestantes = drinkCount % 10; // Gorg√©es qui ne forment pas un verre complet

    let drinkMessage = `<h2>P√©nalit√© : ${drinkCount} gorg√©es √† boire üçª</h2>`;

    if (verres > 0) {
        drinkMessage += `<p>üí• Tu dois boire ${verres} verre(s) entier(s) ! üç∑</p>`;
    }

    if (shots > 0) {
        drinkMessage += `<p>üî• En plus, ${shots} shot(s) pour f√™ter √ßa ! ü•É</p>`;
    }

    // On affiche seulement les gorg√©es restantes si elles sont pertinentes
    if (gorg√©esRestantes > 0 && verres === 0) {
        drinkMessage += `<p>Tu dois boire ${gorg√©esRestantes} gorg√©e(s)... courage ! üòà</p>`;
    }

    const resultContainer = document.getElementById("result-container");
    resultContainer.innerHTML += drinkMessage;
});
